name: "4d-conv"

# Training data
layer {
  name: "data"
  type: "Data"

  include {
    phase: TRAIN
  }

  data_param {
    source: "data/4d_train"
    backend: LMDB
    batch_size: 64
  }

  top: "data"
  top: "labels"
}

# Validation data
layer {
  name: "data"
  type: "Data"

  include {
    phase: TEST
    stage: "test-on-train"
  }

  data_param {
    source: "data/3d_validation"
    backend: LMDB
    batch_size: 64
  }

  top: "data"
  top: "labels"
}

# Test data
layer {
  name: "data"
  type: "Data"

  include {
    phase: TEST
    stage: "test-on-test"
  }

  data_param {
    source: "data/4d_test"
    backend: LMDB
    batch_size: 64
  }

  top: "data"
  top: "labels"
}

# Conv layer
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  convolution_param {
    num_output: 8
    axis: 4
    kernel_size: 5  # i could just specify "kernel_size: 2" if i wanted 2x2x2x2 filters
  }
}
layer {
  name: "ip-out"
  type: "InnerProduct"
  bottom: "conv-out"
  top: "ip-out"
  inner_product_param {
    num_output: 1
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip-out"
  bottom: "label"
  top: "loss"
}
